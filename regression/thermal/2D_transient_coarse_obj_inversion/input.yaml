%YAML 1.1
---
ANONYMOUS:
  Mesh Settings File: input_mesh.yaml
  Physics: 
    solve_thermal: true
    Dirichlet conditions:
      e:
        all boundaries: '0.0'
    Responses:
      resp: 'e'
    Targets:
      targ: 2.0*pi*pi*sin(pi*x)*sin(pi*y)*sin(pi*t) - pi*sin(pi*x)*sin(pi*y)*cos(pi*t)
    Weights:
      wt: '1.0'
  Subgrid:
    Mesh: 
      shape: quad
      refinements: 0
      dim: 2
      blocknames: eblock
    Physics: 
      solve_thermal: true
      Responses:
        resp: 'e'
      Targets:
        targ: 2.0*pi*pi*sin(pi*x)*sin(pi*y)*sin(pi*t) - pi*sin(pi*x)*sin(pi*y)*cos(pi*t)
      Weights:
        wt: '1.0'
    Discretization:
      order:
        e: 1
      quadrature: 2
    Solver:
      solver: transient
      Verbosity: 0
      NLtol: 9.99999999999999955e-07
      lintol: 9.99999999999999939e-12
      MaxNLiter: 4
      finaltime: 1.00000000000000000e+00
      write state solution: false
      Use Mortar Objective: false
    Functions:
      thermal source: thermal_source(0)*(2*pi*pi*sin(pi*t)+pi*cos(pi*t))*sin(pi*x)*sin(pi*y)
    Parameters Settings File: input_params.yaml
  Parameters Settings File: input_params.yaml
  Discretization:
    order:
      e: 1
    quadrature: 2
  Analysis Settings File: input_rol2.yaml
  Solver:
    solver: transient
    Verbosity: 0
    NLtol: 1.00000000000000004e-10
    lintol: 9.99999999999999980e-13
    MaxNLiter: 4
    finaltime: 1.00000000000000000e+00
    numSteps: 4
    Use Mortar Objective: false
  Postprocess: 
    response type: global
    Verbosity: 0
    verification: false
    write solution: false
    compute objective: true
  Functions: 
    thermal source: thermal_source(0)*(2*pi*pi*sin(pi*t)+pi*cos(pi*t))*sin(pi*x)*sin(pi*y) 
...
